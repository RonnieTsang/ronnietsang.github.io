---
layout: post
title: "理解C/C++中的#和##操作符"
date: 2014-09-15 00:09:19 +0800
comments: true
categories: C/C++ Language 
---

这两个符号在 C/C++ 语言中属于`编译器预处理`的范畴，属于编译期概念（而非运行期概念）

**`##`连接符** 的功能是在带参数的宏定义中将两个子串(token)连接起来，从而形成一个新的子串。但它不可以是第一个或者最后一个子串

`所谓的子串就是指编译器能够识别的最小语法单元。具体的定义在编译原理里面有详尽解释，但不知道也无所谓`

**`#`连接符** 的功能是把传递过来的参数当成字符串进行替代，即所谓 `字符串化`

<!-- more -->

## 实例说明

假设程序中已经定义了这样一个带参数的宏：

```c
#define paster(n) printf("token" #n " = %d", token##n)
```

同时又定义了一个整型变量：

```c
int token9 = 9;
```

现在在主程序中以下面的方式调用这个宏：

```c
paster(9);
```

那么在编译时，上面的这句话被扩展为：

```c
printf("token" "9" " = %d", token9);
```

运行结果自然就是：

```sh
$ token9 = 9
```

## 小记

```sh
## -- 连接两个参数
#  -- 字符串化
```
