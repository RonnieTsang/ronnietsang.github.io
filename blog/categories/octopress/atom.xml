<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | RonnieTsang's Blog]]></title>
  <link href="http://RonnieTsang.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://RonnieTsang.github.io/"/>
  <updated>2014-09-15T13:11:33+08:00</updated>
  <id>http://RonnieTsang.github.io/</id>
  <author>
    <name><![CDATA[RonnieTsang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://RonnieTsang.github.io/blog/2014/09/05/hello-octopress/"/>
    <updated>2014-09-05T01:35:36+08:00</updated>
    <id>http://RonnieTsang.github.io/blog/2014/09/05/hello-octopress</id>
    <content type="html"><![CDATA[<p>想要有自己的博客这个想法很久很久了&hellip;行动上却很诚实，鄙视一下自己！</p>

<hr />

<p><code>2013-10-31</code> 号申请的域名 <a href="http://lseek.me">lseek.me</a> 一直闲置到现在，着实是暴殄天物！想当初好不容易才找到这个为数甚少的未被注册的 C 标准库函数名 <code>lseek</code>， 而且 <code>lseek.me</code> 刚好带有点 <code>寻求自我</code> 的意味，那时还真有点小激动呢～～～导致手一抖 280 块大洋没了 >_&lt;</p>

<p>前段时间无意知道 <code>github</code> + <code>octopress</code> 搭建 blog 这玩意，而且还是免费的，<code>github</code> 为你管理服务器，并提供无限流量，世界各地都有理想的访问速度，这还得了，叼炸天啊，不过过瘾怎么行！</p>

<p>于是一通搜索，看了诸多教程，基本上都是大同小异，照虎画猫很快把 blog 搭建了起来。本文简单记录一下整个过程：</p>

<!-- more -->


<hr />

<h2><strong>准备工作</strong></h2>

<blockquote><ul>
<li>安装 <a href="http://git-scm.com/">Git</a></li>
<li>安装 Ruby 1.9.3 或 更高版本 ( 通过 <a href="http://octopress.org/docs/setup/rbenv">rbenv</a> 或 <a href="http://octopress.org/docs/setup/rvm">RVM</a> )</li>
</ul>
</blockquote>

<h2><strong>搭建 Octopress 环境</strong></h2>

<h3>1) 安装 Octopress</h3>

<pre><code class="sh">$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress
</code></pre>

<h3>2) 安装相关依赖</h3>

<pre><code class="sh">$ gem install bundler
$ rbenv rehash
$ bundle install
</code></pre>

<h3>3) 安装默认的 Octopress 主题</h3>

<pre><code class="sh">$ rake install
</code></pre>

<p>参考：<a href="http://octopress.org/docs/setup/">Initial Setup</a></p>

<h2><strong>配置 Octopress</strong></h2>

<p>Octopress 的作者已经尽量让配置简化了。大多数情况下只需要配置 <code>_config.yml</code> 和 <code>Rakefile</code> 文件即可。其中 <code>Rakefile</code> 是跟博客部署相关，一般情况下并不需要修改这个文件，除非使用了 <code>rsync</code>。</p>

<p>这一块我就修改了一下 <code>_config.yml</code> 文件，把 <code>url</code> 和 <code>author</code> 加进去而已。其中 <code>url</code> 是必填项，内容是我在 github 上创建的一个仓库地址 <code>http://ronnietsang.github.io</code></p>

<p>接着删除了里面的 twitter 相关的信息，否则据说是由于 GFW 的原因，将会造成页面加载很慢。</p>

<p>然后修改定制文件 <code>./.themes/classic/source/_includes/custom/head.html</code> 把 google 的自定义字体去掉，原因同上。</p>

<p>参考：<a href="http://octopress.org/docs/configuring/">Basic Configuration</a></p>

<h2><strong>创建第一篇博客</strong></h2>

<p>没错，现在就已经可以开始写博客了！</p>

<h3>1) 创建博文</h3>

<p>Octopress 为我们提供了一些 task 来创建博文和页面。博文必须存储在 <code>source/_posts</code> 目录下，并且需要按照 Jekyll 的命名规范对文章进行命名：<code>YYYY-MM-DD-post-title.markdown</code>。文章的名字会被当做 <code>url</code> 的一部分，而其中的日期用于对博文的区分和排序。</p>

<pre><code class="sh">$ rake new_post["Hello Octopress"]
</code></pre>

<p>其中 <code>Hello Octopress</code> 为博文的文件名，创建出来的文件默认是 <code>markdown</code> 格式。上面的命令会创建出这样一个文件：<code>./source/_posts/2014-09-04-hello-octopress.markdown</code>。打开这个文件，可以看到里面有如下一些内容了 ( 告诉Jekyll博客引擎如何处理博文和页面 )：</p>

<pre><code>---
layout: post
title: "Hello Octopress"
date: 2014-09-04 19:13:48 +0800
comments: true
categories:
---
</code></pre>

<h3>2) 编辑博文</h3>

<p>接下来使用你喜欢的 markdown 编辑器编写博文，完成后贴到上面的文件中就可以了。</p>

<blockquote><p>我用的是 <code>作业部落</code> 出品的 <a href="https://zybuluo.com/mdeditor">Cmd Markdown</a> 在线编辑阅读器，基本上兼容 github 的 markdown 文法，挺好用的，推荐！</p></blockquote>

<h3>3) 本地预览</h3>

<p>执行：</p>

<pre><code class="sh">$ rake preview
</code></pre>

<p>然后就能在浏览器中进行本地预览访问了： <code>http://127.0.0.1:4000/</code> 或 <code>http://localhost:4000/</code>，效果跟仓库中的一样。</p>

<h3>4) 完整过程</h3>

<p>下面是创建并部署博文的一个完整过程：</p>

<pre><code class="sh">$ rake new_post["Hello Octopress"]
$ rake generate
$ git add .
$ git commit -m 'My first blog -- Hello Octopress'
$ git push origin source
$ rake deploy
</code></pre>

<p>先 mark ，现在还无法部署博文，要等后面部署博客完毕再参考这个过程来部署博文。</p>

<p>参考：<a href="http://octopress.org/docs/blogging">Blogging Basics</a></p>

<hr />

<h2><strong>部署到 Github Pages</strong></h2>

<p>官方推荐了3种部署方式：</p>

<blockquote><ul>
<li><code>GitHub Pages</code>： 部署允许自定义域名，免费，好处是多人开发更方面，坏处是文件随时可以被任何人拉下来</li>
<li><code>Heroku</code>：部署允许自定义域名，免费，并且是私有的</li>
<li><code>Rsync</code>：建议用来部署有自己服务器的个人博客</li>
</ul>
</blockquote>

<p>当然了，我选择的是 <strong><a href="https://pages.github.com/">GitHub Pages</a></strong> 。</p>

<h3>1) 创建仓库</h3>

<p>在 <a href="https://github.com/">GitHub</a> 上创建仓库 <a href="https://github.com/RonnieTsang/ronnietsang.github.io">ronnietsang.github.io</a> ( 网上很多年代久远的教程都是说 com 后缀，现在改成 io 了 )</p>

<blockquote><ul>
<li>保持新建仓库为空的，不要勾选创建 <code>README</code> 文件等选项( 这可能导致后面部署 <code>rake deploy</code> 失败，引出一系列问题 )</li>
<li>一般来说，我们希望在将博客的源码放到 <code>source</code> 分支下，并把生成的内容提交到 <code>master</code> 分支</li>
</ul>
</blockquote>

<h3>2) 配置仓库</h3>

<p>一键配置：只需要利用 octopress 的一个配置 <code>rake</code> 任务就可以自动配置上面创建的仓库，超级方便：</p>

<pre><code class="sh">$ rake setup_github_pages
</code></pre>

<p>这个命令会要求你输入刚刚创建的仓库的 <code>url</code> ( <code>ssh</code> or <code>https</code> url )，拷贝过来，回车，接下来它就干了这么几件事：</p>

<blockquote><ul>
<li>将指向远程分支 imathis/octopress 的指针 origin 改名为 octopress</li>
<li>添加刚才创建的仓库为默认的远程分支</li>
<li>将活跃分支从 master 转到 source</li>
<li>根据 github仓库 配置博客的 url</li>
<li>创建一个_deploy目录，用来存放部署到 master 分支的内容</li>
</ul>
</blockquote>

<h3>3) 部署仓库</h3>

<p>命令如下：</p>

<pre><code class="sh">$ rake generate
$ rake deploy
</code></pre>

<p>干了这么几件事：</p>

<blockquote><ul>
<li>生成博客文件，并拷贝至 _deploy 目录下</li>
<li>将这些内容添加到 git 中，并 commit 和 push 到仓库的 master 分支</li>
</ul>
</blockquote>

<p>不过博客的 <code>source</code> 需要单独提交，执行如下命令就可以将 <code>source</code> 提交到仓库的 <code>source</code> 分支下。</p>

<pre><code class="sh">$ git add .
$ git commit -m 'Initial source commit'
$ git push origin source
</code></pre>

<p>至此，博客已经完成基本的部署。但是当我满心期待地使用前面配置的 url 来访问时，直接来了一个冷冰冰的 <code>404</code>！好吧，莫慌，原来是有延迟，稍等几分钟(我等了半个钟&hellip;)，终于可以正常访问了！</p>

<p>参考：<a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a></p>

<hr />

<h2><strong>更多功能</strong></h2>

<p>在搭建博客的时候，我们可能会对博客做一些配置，例如添加评论、域名解析、分享等。先 mark，以后再慢慢了解吧。</p>

<p>参考：</p>

<blockquote><ul>
<li><a href="http://octopress.org/docs/blogging/code">Sharing Code Snippets</a></li>
<li><a href="http://octopress.org/docs/blogging/plugins">Blogging With Plugins</a></li>
<li><a href="http://octopress.org/docs/theme">Theming &amp; Customization</a></li>
<li><a href="http://octopress.org/docs/updating">Updating Octopress</a></li>
</ul>
</blockquote>

<hr />

<p><strong>承诺</strong></p>

<p>下个死命令：坚持下去，中秋回来以后，每周至少更新 <code>2</code> 篇技术博文！</p>
]]></content>
  </entry>
  
</feed>
